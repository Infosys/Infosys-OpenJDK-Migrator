importsyntax1=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax2=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax30=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax31=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax32=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax33=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax34=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax39=##Use java.security.Policy instead of java.security.acl.Acl #COMPLEXITY2##OPTIONAL# 
syntax40=##Use java.security.Policy instead of java.security.acl.AclEntry #COMPLEXITY2##OPTIONAL# 
syntax41=##Use java.security.Policy instead of java.security.acl.Group #COMPLEXITY2##OPTIONAL# 
syntax42=##Use java.security.Policy instead of java.security.acl.Owner #COMPLEXITY2##OPTIONAL# 
syntax43=##Use java.security.Policy instead of java.security.acl.Permission #COMPLEXITY2##OPTIONAL# 
syntax44=##Use java.security.Policy instead of java.security.acl.Certificate #COMPLEXITY2##OPTIONAL# 
syntax45=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax46=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax47=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax48=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax49=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax51=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax115=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax116=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax117=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax118=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax119=##Use AWTEvent instead of Event #COMPLEXITY2##OPTIONAL# 
importsyntax120=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax121=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax122=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax123=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax127=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax128=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax129=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax130=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax131=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax132=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax135=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax136=##Use java.security.cert instead of javax.security.cert.Certificate #COMPLEXITY2##OPTIONAL# 
importsyntax137=##Use java.security.cert instead of javax.security.cert.X509Certificate #COMPLEXITY2##OPTIONAL# 
importsyntax138=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax139=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax140=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax141=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax142=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax143=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax144=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax155=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax156=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax157=No Replacement #COMPLEXITY3##OPTIONAL#
syntax169=##use Cursor.getPredefinedCursor(int) instead of Cursor.Predefined #COMPLEXITY1##OPTIONAL# 
syntax170=##Use DataFlavor.getReaderForText(java.awt.datatransfer.Transferable) instead of Transferable.getTransferData(DataFlavor.plainTextFlavor) #COMPLEXITY1##OPTIONAL# 
syntax171=##It is recommended that (ALT_GRAPH_DOWN_MASK,ALT_DOWN_MASK,BUTTON1_DOWN_MASK,BUTTON2_DOWN_MASK,BUTTON3_DOWN_MASK,CTRL_DOWN_MASK,META_DOWN_MASK,SHIFT_DOWN_MASK) and InputEvent.getModifiersEx() be used. #COMPLEXITY1##OPTIONAL# 
syntax179=##Use java.awt.Cursor instead of java.awt.Frame to access this field #COMPLEXITY1# \nhttps://www.splessons.com/lesson/swing-cursors/\n #OPTIONAL# 
syntax193=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax194=##Use java.math.BigDecimal.RoundingMode.CEILING instead of java.math.BigDecimal.ROUND_CEILING  #COMPLEXITY1# \nhttps://www.splessons.com/lesson/swing-cursors/\n #OPTIONAL# 
syntax195=##Use java.math.BigDecimal.RoundingMode.DOWN instead of java.math.BigDecimal.ROUND_DOWN  #COMPLEXITY1# \nhttps://www.splessons.com/lesson/swing-cursors/\n #OPTIONAL# 
syntax196=##Use java.math.BigDecimal.RoundingMode.FLOOR instead of java.math.BigDecimal.ROUND_FLOOR #COMPLEXITY1# \nhttps://www.splessons.com/lesson/swing-cursors/\n #OPTIONAL# 
syntax197=##Use java.math.BigDecimal.RoundingMode.HALF_DOWN instead of java.math.BigDecimal.ROUND_HALF_DOWN #COMPLEXITY1# \nhttps://www.splessons.com/lesson/swing-cursors/\n #OPTIONAL# 
syntax198=##Use java.math.BigDecimal.RoundingMode.HALF_EVEN instead of java.math.BigDecimal.ROUND_HALF_EVEN #COMPLEXITY1# \nhttps://www.splessons.com/lesson/swing-cursors/\n #OPTIONAL# 
syntax199=##Use java.math.BigDecimal.RoundingMode.HALF_UP instead of java.math.BigDecimal.ROUND_HALF_UP #COMPLEXITY1# \nhttps://www.splessons.com/lesson/swing-cursors/\n #OPTIONAL# 
syntax200=##Use java.math.BigDecimal.RoundingMode.UNNECESSARY instead of java.math.BigDecimal.ROUND_UNNECESSARY #COMPLEXITY1# \nhttps://www.splessons.com/lesson/swing-cursors/\n #OPTIONAL# 
syntax201=##Use java.math.BigDecimal.RoundingMode.UP instead of java.math.BigDecimal.ROUND_UP #COMPLEXITY1# \nhttps://www.splessons.com/lesson/swing-cursors/\n #OPTIONAL# 
syntax202=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax203=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax204=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax205=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax206=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax207=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax208=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax209=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax210=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax211=##Use javax.management.openmbean.OpenType.ALLOWED_CLASSNAMES_LIST instead of javax.management.openmbean.OpenType.ALLOWED_CLASSNAMES #COMPLEXITY2# \nhttps://docs.oracle.com/javase/7/docs/api/javax/management/openmbean/OpenType.html\n #OPTIONAL# 
syntax212=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax213=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax214=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax215=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax216=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax217=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax218=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax236=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax240=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax244=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax245=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax246=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax247=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax248=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax249=##Use java.rmi.SecurityException instead of java.rmi.RMISecurityException #COMPLEXITY2##OPTIONAL# 
importsyntax250=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax253=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax254=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax255=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax256=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax257=##Use java.security.cert.CertificateEncodingException instead of javax.security.cert.CertificateEncodingException #COMPLEXITY2##OPTIONAL# 
importsyntax258=##Use java.security.cert.CertificateException instead of javax.security.cert.CertificateException #COMPLEXITY2##OPTIONAL# 
importsyntax259=##Use java.security.cert.CertificateExpiredException instead of javax.security.cert.CertificateExpiredException #COMPLEXITY2##OPTIONAL# 
importsyntax260=##Use java.security.cert.CertificateNotYetValidException instead of javax.security.cert.CertificateNotYetValidException #COMPLEXITY2##OPTIONAL# 
importsyntax261=##Use java.security.cert.CertificateParsingException instead of javax.security.cert.CertificateParsingException #COMPLEXITY2##OPTIONAL# 
importsyntax262=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax264=##Use java.awt.AWTEvent(Object,int) instead of java.awt.AWTEvent(Event) #COMPLEXITY2##OPTIONAL# 
syntax265=##Use java.awt.AWTEvent(Object,int) instead of java.awt.event.KeyEvent(Component, int, long, int, int) #COMPLEXITY2##OPTIONAL# 
syntax266=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax267=##The static factory Boolean.valueOf(boolean) is generally a better choice, as it is likely to yield significantly better space and time performance. Also consider using the final fields Boolean.TRUE and Boolean.FALSE if possible #COMPLEXITY1##OPTIONAL# 
syntax268=##The static factory Byte.valueOf(byte) is generally a better choice, as it is likely to yield significantly better space and time performance. #COMPLEXITY1##OPTIONAL# 
syntax269=##The static factory Character.valueOf(char) is generally a better choice, as it is likely to yield significantly better space and time performance. #COMPLEXITY1##OPTIONAL# 
syntax270=##The static factory Double.valueOf(double) is generally a better choice, as it is likely to yield significantly better space and time performance. #COMPLEXITY1##OPTIONAL# 
syntax271=##The static factory Float.valueOf(float) is generally a better choice, as it is likely to yield significantly better space and time performance. #COMPLEXITY1##OPTIONAL# 
syntax272=##The static factory Integer.valueOf(int) is generally a better choice, as it is likely to yield significantly better space and time performance. #COMPLEXITY1##OPTIONAL# 
syntax273=##The static factory Long.valueOf(long) is generally a better choice, as it is likely to yield significantly better space and time performance. #COMPLEXITY1##OPTIONAL# 
syntax274=##The static factory Short.valueOf(short) is generally a better choice, as it is likely to yield significantly better space and time performance. #COMPLEXITY1##OPTIONAL# 
syntax276=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax278=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax281=##Use java.security.AuthProvider(String,String, String) instead of java.security.AuthProvider(String, double, String) #COMPLEXITY2##OPTIONAL# 
syntax282=##Use java.security.Provider(String, String, String) instead of java.security.Provider(String, double, String) #COMPLEXITY2##OPTIONAL# 
syntax283=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax286=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax287=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax288=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax289=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax290=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax291=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax292=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax293=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax294=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax295=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax296=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax297=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax298=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax299=#M#Use java.awt.BorderLayout.addLayoutComponent(Component,Object) instead of java.awt.BorderLayout.addLayoutComponent(String, Component) #COMPLEXITY2##OPTIONAL# 
syntax300=#M#Use java.awt.CardLayout.addLayoutComponent(Component,Object) instead of java.awt.CardLayout.addLayoutComponent(String, Component) #COMPLEXITY2##OPTIONAL# 
syntax301=#M#Use CheckboxGroup.getSelectedCheckbox() instead of CheckboxGroup.getCurrent() #COMPLEXITY1##OPTIONAL# 
syntax302=setSelectedCheckbox #COMPLEXITY1##OPTIONAL# 
syntax303=getItemCount #COMPLEXITY1##OPTIONAL# 
syntax304=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax305=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax306=getBounds #COMPLEXITY1##OPTIONAL# 
syntax307=#M#Use java.awt.Component.dispatchEvent(AWTEvent) instead of java.awt.Component.deliverEvent(Event) #COMPLEXITY1##OPTIONAL# 
syntax308=#M#Use java.awt.Component.setEnabled(boolean) instead of java.awt.Component.disable() #COMPLEXITY1##OPTIONAL# 
syntax309=#M#Use java.awt.Component.setEnabled(boolean) instead of java.awt.Component.enabled()  #COMPLEXITY1##OPTIONAL# 
syntax310=#M#Use java.awt.Component.processFocusEvent(FocusEvent) instead of java.awt.Component.gotFocus(Event, Object) #COMPLEXITY1##OPTIONAL# 
syntax311=#M#Use java.awt.Component.processEvent(AWTEvent) instead of java.awt.Component.handleEvent(Event) #COMPLEXITY1##OPTIONAL# 
syntax312=#M#Use java.awt.Component.setVisible(boolean) instead of java.awt.Component.hide() #COMPLEXITY1##OPTIONAL# 
syntax313=contains #COMPLEXITY1##OPTIONAL# 
syntax314=#M#Use isFocusable() instead of Component.isFocusTraversable() #COMPLEXITY1##OPTIONAL# 
syntax315=#M#Use java.awt.Component.processKeyEvent(KeyEvent) instead of java.awt.Component.keyDown(Event, int) #COMPLEXITY2##OPTIONAL# 
syntax316=#M#Use java.awt.Component.processKeyEvent(KeyEvent) instead of java.awt.Component.keyUp(Event, int) #COMPLEXITY2##OPTIONAL# 
syntax317=doLayout #COMPLEXITY1##OPTIONAL# 
syntax318=getComponentAt #COMPLEXITY1##OPTIONAL# 
syntax319=getLocation #COMPLEXITY1##OPTIONAL# 
syntax320=#M#Use Component.processFocusEvent(FocusEvent) instead of Component.lostFocus(Event, Object) #COMPLEXITY1##OPTIONAL# 
syntax321=#M#Use Component.getMinimumSize() instead of Component.minimumSize() #COMPLEXITY1##OPTIONAL# 
syntax322=#M#Use Component.processMouseEvent(MouseEvent) instead of Component.mouseDown(Event, int, int) #COMPLEXITY1##OPTIONAL# 
syntax323=#M#Use processMouseMotionEvent(MouseEvent) instead of Component.mouseDrag(Event, int, int) #COMPLEXITY1##OPTIONAL# 
syntax324=#M#Use processMouseEvent(MouseEvent) instead of Component.mouseEnter(Event, int, int) #COMPLEXITY1##OPTIONAL# 
syntax325=#M#Use processMouseEvent(MouseEvent) instead of Component.mouseExit(Event, int, int) #COMPLEXITY1##OPTIONAL# 
syntax326=#M#Use processMouseMotionEvent(MouseEvent) instead of Component.mouseMove(Event, int, int) #COMPLEXITY1##OPTIONAL# 
syntax327=#M#Use processMouseEvent(MouseEvent) instead of Component.mouseUp(Event, int, int) #COMPLEXITY1##OPTIONAL# 
syntax328=setLocation #COMPLEXITY1##OPTIONAL# 
syntax329=transferFocus #COMPLEXITY1##OPTIONAL# 
syntax330=#M#Use dispatchEvent(AWTEvent) instead of Component.postEvent(Event) #COMPLEXITY1##OPTIONAL#
syntax331=getPreferredSize #COMPLEXITY1##OPTIONAL# 
syntax332=setBounds #COMPLEXITY1##OPTIONAL# 
syntax333=setSize #COMPLEXITY1##OPTIONAL# 
syntax334=#M#Use java.awt.Component.setVisible(boolean) instead of java.awt.Component.show() #COMPLEXITY1##OPTIONAL# 
syntax335=getSize #COMPLEXITY1##OPTIONAL# 
syntax336=#M#Use ComponentOrientation.getOrientation(java.util.Locale) instead of ComponentOrientation.getOrientation(ResourceBundle) #COMPLEXITY1##OPTIONAL# 
syntax337=getComponentCount #COMPLEXITY1##OPTIONAL# 
syntax338=#M#Use java.awt.Container.dispatchEvent(AWTEvent e) instead of java.awt.Container.deliverEvent(Event) #COMPLEXITY2##OPTIONAL# 
syntax339=getInsets #COMPLEXITY1##OPTIONAL# 
syntax340=doLayout #COMPLEXITY1##OPTIONAL# 
syntax341=getComponentAt #COMPLEXITY1##OPTIONAL# 
syntax342=getMinimumSize #COMPLEXITY1##OPTIONAL# 
syntax343=getPreferredSize #COMPLEXITY1##OPTIONAL# 
syntax344=isMimeTypeEqual #COMPLEXITY1##OPTIONAL# 
syntax345=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax346=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax347=#M#Use setVisible(boolean) instead of Dialog.hide() #COMPLEXITY1##OPTIONAL# 
syntax348=#M#Use setVisible(boolean) instead of Dialog.show() #COMPLEXITY1##OPTIONAL# 
syntax349=#M#Use InputEvent.getModifiersEx() instead of InputEvent.getModifiers() #COMPLEXITY1##OPTIONAL# 
syntax350=#M#Use InputEvent.getModifiersExText(int) instead of KeyEvent.getKeyModifiersText(int) #COMPLEXITY1##OPTIONAL# 
syntax351=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax352=getMaxDescent #COMPLEXITY1##OPTIONAL# 
syntax353=#M#Use java.awt.Component.getCursor() instead of java.awt.Frame.getCursorType() #COMPLEXITY1##OPTIONAL# 
syntax354=#M#Use java.awt.Component.setCursor(Cursor) instead of java.awt.Frame.setCursor(int) #COMPLEXITY1##OPTIONAL# 
syntax355=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax356=getClipBounds #COMPLEXITY1##OPTIONAL# 
syntax357=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax358=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax359=concatenateTransform #COMPLEXITY1##OPTIONAL# 
syntax360=concatenateTransform #COMPLEXITY1##OPTIONAL# 
syntax361=add #COMPLEXITY1##OPTIONAL# 
syntax362=isMultipleMode #COMPLEXITY1##OPTIONAL# 
syntax363=removeAll #COMPLEXITY1##OPTIONAL# 
syntax364=getItemCount #COMPLEXITY1##OPTIONAL# 
syntax365=remove #COMPLEXITY1##OPTIONAL#  
syntax366=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax367=isIndexSelected #COMPLEXITY1##OPTIONAL# 
syntax368=getMinimumSize #COMPLEXITY1##OPTIONAL# 
syntax369=getPreferredSize #COMPLEXITY1##OPTIONAL# 
syntax370=setMultipleMode #COMPLEXITY1##OPTIONAL# 
syntax371=getItemCount #COMPLEXITY1##OPTIONAL# 
syntax372=getMenuCount #COMPLEXITY1##OPTIONAL# 
syntax373=#M#Use java.awt.MenuComponent.dispatchEvent instead of java.awt.MenuComponent.postEvent(Event) #COMPLEXITY1##OPTIONAL# 
syntax374=#M#Use java.awt.MenuContainer.dispatchEvent(AWTEvent) instead of java.awt.MenuContainer.postEvent(Event) #COMPLEXITY1##OPTIONAL# 
syntax375=#M#Use java.awt.MenuItem.setEnabled(boolean) instead of java.awt.MenuItem.disable() #COMPLEXITY1##OPTIONAL# 
syntax376=#M#Use java.awt.MenuItem.setEnabled(boolean) instead of java.awt.MenuItem.enable() #COMPLEXITY1##OPTIONAL# 
syntax377=getBounds #COMPLEXITY1##OPTIONAL# 
syntax378=contains #COMPLEXITY1##OPTIONAL# 
syntax379=#M#Use java.awt.PrintJob.finalize() instead of java.awt.PrintJob.finalize() #COMPLEXITY1##OPTIONAL# 
syntax380=contains #COMPLEXITY1##OPTIONAL# 
syntax381=setLocation #COMPLEXITY1##OPTIONAL# 
syntax382=setBounds #COMPLEXITY1##OPTIONAL# 
syntax383=setSize #COMPLEXITY1##OPTIONAL# 
syntax384=getUnitIncrement #COMPLEXITY1##OPTIONAL# 
syntax385=getBlockIncrement #COMPLEXITY1##OPTIONAL# 
syntax386=getVisibleAmount #COMPLEXITY1##OPTIONAL# 
syntax387=setUnitIncrement #COMPLEXITY1##OPTIONAL# 
syntax388=setBlockIncrement #COMPLEXITY1##OPTIONAL# 
syntax389=doLayout #COMPLEXITY1##OPTIONAL# 
syntax390=append #COMPLEXITY1##OPTIONAL# 
syntax391=insert #COMPLEXITY1##OPTIONAL# 
syntax392=getMinimumSize #COMPLEXITY1##OPTIONAL# 
syntax393=getPreferredSize #COMPLEXITY1##OPTIONAL# 
syntax394=replaceRange #COMPLEXITY1##OPTIONAL# 
syntax395=getMinimumSize #COMPLEXITY1##OPTIONAL# 
syntax396=getPreferredSize #COMPLEXITY1##OPTIONAL# 
syntax397=setEchoChar #COMPLEXITY1##OPTIONAL# 
syntax398=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax399=#M#Use Font.getLineMetrics instead of Toolkit.getFontMetrics(Font)#COMPLEXITY2##OPTIONAL# 
syntax400=#M#Use Toolkit.getMenuShortcutKeyMaskEx() instead of Toolkit.getMenuShortcutKeyMask() #COMPLEXITY2##OPTIONAL# 
syntax401=#M#Use Component.applyComponentOrientation instead of Window.applyResourceBundle(ResourceBundle)#COMPLEXITY2##OPTIONAL# 
syntax402=#M#Use Window.setVisible(boolean) instead of Window.hide() #COMPLEXITY1##OPTIONAL# 
syntax403=#M#Use Window.dispatchEvent(AWTEvent) instead of Window.postEvent(Event)  #COMPLEXITY1##OPTIONAL# 
syntax404=setBounds #COMPLEXITY1##OPTIONAL# 
syntax405=#M#Use Window.setVisible(boolean) instead of Window.hide() #COMPLEXITY1##OPTIONAL# 
syntax406=#M#Use  Beans.instantiate(ClassLoader, String, BeanContext) as Applet API is deprecated #COMPLEXITY3##OPTIONAL# 
syntax407=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax408=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax409=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax410=No Replacement #COMPLEXITY3##MANDATORY# 
syntax411=No Replacement #COMPLEXITY3##MANDATORY# 
syntax412=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax413=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax414=isJavaIdentifierStart #COMPLEXITY1##OPTIONAL# 
syntax415=isJavaIdentifierPart #COMPLEXITY1##OPTIONAL# 
syntax416=isWhitespace #COMPLEXITY1##OPTIONAL# 
syntax417=#M#use class.getDeclaredConstructor().newInstance() instead of class.newInstance() #COMPLEXITY2##OPTIONAL#  
syntax418=#M#Use java.lang.ClassLoader.defineClass(String,byte[], int, int) instead of java.lang.ClassLoader.defineClass(byte[], int, int) #COMPLEXITY2##OPTIONAL# 
syntax419=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax420=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax421=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax422=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax423=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax424=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax425=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax426=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax427=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax428=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax429=#M#Use checkPermission(java.security.Permission) instead of SecurityManager.checkMulticast(InetAddress, byte) #COMPLEXITY2##OPTIONAL# 
syntax431=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax432=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax433=No Replacement #COMPLEXITY3##MANDATORY# 
syntax434=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax435=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax436=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax437=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax438=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax439=#M#The method divide(BigDecimal, RoundingMode) or divide(BigDecimal, int, RoundingMode) should be used in preference to this legacy method. #COMPLEXITY1##OPTIONAL# 
syntax440=#M#The method BigDecimal.setScale(int, RoundingMode) should be used in preference to this legacy method. #COMPLEXITY1##OPTIONAL#
syntax441=#M#Use getTimeToLive instead of DatagramSocketImpl.getTTL() #COMPLEXITY2##OPTIONAL# 
syntax442=#M#Use setTimeToLive instead of DatagramSocketImpl.setTTL(bytes) #COMPLEXITY2##OPTIONAL# 
syntax443=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax444=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax445=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax446=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax447=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax448=#M#Use decode(String,String) instead of URLDecoder.decode(String) #COMPLEXITY2##OPTIONAL# 
syntax449=#M#Use encode(String,String) instead of URLDecoder.encode(String) #COMPLEXITY2##OPTIONAL# 
syntax450=#M#Use setURL(URL, String, String, int, String, String, String, String) instead of URLStreamHandler.setURL(URL, String, String, int, String, String)#COMPLEXITY2##OPTIONAL# 
syntax451=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax452=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax453=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax454=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax455=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax456=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax457=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax458=log #COMPLEXITY1##OPTIONAL# 
syntax459=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax460=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax461=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax462=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax463=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax464=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax465=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax466=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax467=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax468=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax469=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax470=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax471=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax472=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax473=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax474=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax475=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax476=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax477=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax478=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax479=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax480=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax481=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax482=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax483=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax484=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax485=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax486=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax487=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax488=#M#Use java.sql.CallableStatement.getBigDecimal(int parameterIndex) instead of java.sql.CallableStatement.getBigDecimal(int, int) #COMPLEXITY1##OPTIONAL# 
syntax489=#M#Use getLogWriter instead of DriverManager.getLogStream() #COMPLEXITY2##OPTIONAL# 
syntax490=#M#Use setLogWriter instead of DriverManager.setLogStream(PrintStream) #COMPLEXITY2##OPTIONAL# 
syntax491=#M#Use setCharacterStream instead of PreparedStatement.setUnicodeStream(int, InputStream, int) #COMPLEXITY2##OPTIONAL# 
syntax492=#M#Use getBigDecimal(int columnIndex) or getBigDecimal(String columnLabel) instead of ResultSet.getBigDecimal(int, int)#COMPLEXITY2##OPTIONAL# 
syntax493=#M#use getCharacterStream() in place of ResultSet.getUnicodeStream(int) #COMPLEXITY2##OPTIONAL# 
syntax494=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax495=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax496=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax497=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax498=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax499=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax500=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax501=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax502=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax503=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax504=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax505=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax506=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax507=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax508=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax509=#M#Use java.util.Calendar.get(Calendar.DAY_OF_MONTH) instead of java.util.Date.getDate() #COMPLEXITY1# \n https://www.javatpoint.com/java-util-calendar #OPTIONAL# 
syntax510=#M#Use java.util.Calendar.get(Calendar.DAY_OF_WEEK) instead of java.util.Date.getDay() #COMPLEXITY1# \n https://www.javatpoint.com/java-util-calendar #OPTIONAL# 
syntax511=#M#Use java.util.Calendar.get(Calendar.HOUR_OF_DAY) instead of java.util.Date.getHours() #COMPLEXITY1# \n https://www.javatpoint.com/java-util-calendar #OPTIONAL# 
syntax512=#M#Use java.util.Calendar.get(Calendar.MINUTE) instead of java.util.Date.getMinutes() #COMPLEXITY1# \n https://www.javatpoint.com/java-util-calendar #OPTIONAL# 
syntax513=#M#Use java.util.Calendar.get(Calendar.MONTH) instead of java.util.Date.getMonth() #COMPLEXITY1# \n https://www.javatpoint.com/java-util-calendar #OPTIONAL# 
syntax514=#M#Use java.util.Calendar.get(Calendar.SECOND) instead of java.util.Date.getSeconds() #COMPLEXITY1# \n https://www.javatpoint.com/java-util-calendar #OPTIONAL# 
syntax515=#M#Use java.util.(Calendar.get(Calendar.ZONE_OFFSET) + Calendar.get(Calendar.DST_OFFSET)) / (60 * 100) instead of java.util.Date.getTimezoneOffset() #COMPLEXITY1# \n https://www.javatpoint.com/java-util-calendar #OPTIONAL# 
syntax516=#M#Use Calendar.get(Calendar.YEAR) - 1900  instead of java.util.Date.getYear() #COMPLEXITY1# \n https://www.javatpoint.com/java-util-calendar #OPTIONAL# 
syntax517=#M#Use java.util.DateFormat.parse(String s) instead of java.util.Date.parse(String) #COMPLEXITY1##OPTIONAL# 
syntax518=#M#Use java.util.Calendar.set(Calendar.DAY_OF_MONTH, int date) instead of java.util.Date.setDate(int) #COMPLEXITY1# \n https://www.javatpoint.com/java-util-calendar #OPTIONAL# 
syntax519=#M#Use java.util.Calendar.set(Calendar.HOUR_OF_DAY, int hours) instead of java.util.Date.setHours(int) #COMPLEXITY1# \n https://www.javatpoint.com/java-util-calendar #OPTIONAL# 
syntax520=#M#Use java.util.Calendar.set(Calendar.MINUTE, int minutes) instead of java.util.Date.setMinutes(int) #COMPLEXITY1# \n https://www.javatpoint.com/java-util-calendar #OPTIONAL# 
syntax521=#M#Use java.util.Calendar.set(Calendar.MONTH, int month) instead of java.util.Date.setMonth(int) #COMPLEXITY1# \n https://www.javatpoint.com/java-util-calendar #OPTIONAL# 
syntax522=#M#Use java.util.Calendar.set(Calendar.SECOND, int seconds) instead of java.util.Date.setSeconds(int) #COMPLEXITY1# \n https://www.javatpoint.com/java-util-calendar #OPTIONAL# 
syntax523=#M#Use java.util.Calendar.set(Calendar.YEAR, year + 1900) instead of java.util.Date.setYear(int) #COMPLEXITY1# \n https://www.javatpoint.com/java-util-calendar #OPTIONAL# 
syntax524=#M#Use java.util.DateFormat.format(Date date) instead of java.util.Date.toGMTString() #COMPLEXITY1# \n https://www.javatpoint.com/java-util-calendar #OPTIONAL# 
syntax525=#M#Use java.util.DateFormat.format(Date date) instead of java.util.Date.toLocaleString() #COMPLEXITY1# \n https://www.javatpoint.com/java-util-calendar #OPTIONAL# 
syntax526=#M#Use java.util.Calendar.set(year + 1900, month, date, hrs, min, sec) or GregorianCalendar(year + 1900, month, date, hrs, min, sec) instead of java.util.Date.UTC(int, int, int, int, int, int) #COMPLEXITY1# \n https://www.javatpoint.com/java-util-calendar #OPTIONAL# 
syntax527=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax528=setInstant #COMPLEXITY1##OPTIONAL# 
syntax529=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax530=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax531=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax532=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax533=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax534=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax535=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax536=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax537=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax538=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax539=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax540=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax541=#M#Use javax.management.monitor.CounterMonitor.getDerivedGauge(ObjectName) instead of javax.management.monitor.CounterMonitor.getDerivedGauge() #COMPLEXITY2##OPTIONAL# 
syntax542=#M#Use javax.management.monitor.CounterMonitor.getDerivedGaugeTimeStamp(ObjectName) instead of javax.management.monitor.CounterMonitor.getDerivedGaugeTimeStamp() #COMPLEXITY2##OPTIONAL# 
syntax543=#M#Use javax.management.monitor.CounterMonitor.getThreshold(ObjectName) instead of javax.management.monitor.CounterMonitor.getThreshold() #COMPLEXITY2##OPTIONAL# 
syntax544=#M#Use javax.management.monitor.CounterMonitor.setThreshold(java.lang.Number) instead of javax.management.monitor.CounterMonitor.setThreshold(Number) #COMPLEXITY2##OPTIONAL# 
syntax545=#M#Use javax.management.monitor.CounterMonitorMBean.getDerivedGauge(ObjectName) instead of javax.management.monitor.CounterMonitorMBean.getDerivedGauge() #COMPLEXITY2##OPTIONAL# 
syntax546=#M#Use javax.management.monitor.CounterMonitorMBean.getDerivedGaugeTimeStamp(ObjectName) instead of javax.management.monitor.CounterMonitorMBean.getDerivedGaugeTimeStamp() #COMPLEXITY2##OPTIONAL# 
syntax547=#M#Use javax.management.monitor.CounterMonitorMBean.getThreshold(ObjectName) instead of javax.management.monitor.CounterMonitorMBean.getThreshold() #COMPLEXITY2##OPTIONAL# 
syntax548=#M#Use javax.management.monitor.CounterMonitorMBean.setThreshold(java.lang.Number) instead of javax.management.monitor.CounterMonitorMBean.setThreshold(Number) #COMPLEXITY2##OPTIONAL# 
syntax549=#M#Use javax.management.monitor.GaugeMonitor.getDerivedGauge(ObjectName) instead of javax.management.monitor.GaugeMonitor.getDerivedGauge() #COMPLEXITY2##OPTIONAL# 
syntax550=#M#Use javax.management.monitor.GaugeMonitor.getDerivedGaugeTimeStamp(ObjectName) instead of javax.management.monitor.GaugeMonitor.getDerivedGaugeTimeStamp() #COMPLEXITY2##OPTIONAL# 
syntax551=#M#Use javax.management.monitor.GaugeMonitorMBean.getDerivedGauge(ObjectName) instead of javax.management.monitor.GaugeMonitorMBean.getDerivedGauge() #COMPLEXITY2##OPTIONAL# 
syntax552=#M#Use javax.management.monitor.GaugeMonitorMBean.getDerivedGaugeTimeStamp(ObjectName) instead of javax.management.monitor.GaugeMonitorMBean.getDerivedGaugeTimeStamp() #COMPLEXITY2##OPTIONAL# 
syntax553=#M#Use javax.management.monitor.Monitor.getObservedObject) instead of javax.management.monitor.Monitor.getObservedObject() #COMPLEXITY2##OPTIONAL# 
syntax554=#M#Use javax.management.monitor.Monitor.setObservedObject(javax.management.ObjectName) instead of javax.management.monitor.Monitor.setObservedObject(ObjectName) #COMPLEXITY2##OPTIONAL# 
syntax555=#M#Use javax.management.monitor.MonitorMBean.getObservedObject() instead of javax.management.monitor.MonitorMBean.getObservedObject() #COMPLEXITY2##OPTIONAL# 
syntax556=#M#Use javax.management.monitor.MonitorMBean.setObservedObject(javax.management.ObjectName) instead of javax.management.monitor.MonitorMBean.setObservedObject(ObjectName) #COMPLEXITY2##OPTIONAL# 
syntax557=#M#Use javax.management.monitor.StringMonitor.getDerivedGauge(ObjectName) instead of javax.management.monitor.StringMonitor.getDerivedGauge() #COMPLEXITY2##OPTIONAL# 
syntax558=#M#Use javax.management.monitor.StringMonitor.getDerivedGaugeTimeStamp(ObjectName) instead of javax.management.monitor.StringMonitor.getDerivedGaugeTimeStamp() #COMPLEXITY2##OPTIONAL# 
syntax559=#M#Use javax.management.monitor.StringMonitorMBean.getDerivedGauge(ObjectName) instead of javax.management.monitor.StringMonitorMBean.getDerivedGauge() #COMPLEXITY2##OPTIONAL# 
syntax560=#M#Use javax.management.monitor.StringMonitorMBean.getDerivedGaugeTimeStamp(ObjectName) instead of javax.management.monitor.StringMonitorMBean.getDerivedGaugeTimeStamp() #COMPLEXITY2##OPTIONAL# 
syntax561=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax562=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax563=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax564=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax565=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax566=getText #COMPLEXITY2##OPTIONAL# 
syntax567=setText #COMPLEXITY2##OPTIONAL# 
syntax568=#M#Use KeyboardFocusManager.setDefaultFocusTraversalPolicy(FocusTraversalPolicy) instead of FocusManager.disableSwingFocusManager() #COMPLEXITY2##OPTIONAL# 
syntax569=#M#Use KeyboardFocusManager.getDefaultFocusTraversalPolicy() instead of FocusManager.isFocusManagerEnabled() #COMPLEXITY2##OPTIONAL# 
syntax570=#M#Use InputVerifier.shouldYieldFocus(JComponent, JComponent) instead of InputVerifier.shouldYieldFocus(JComponent) #COMPLEXITY2##OPTIONAL# 
syntax571=#M#Use java.awt.Component.setEnabled(boolean) instead of javax.swing.JComponent.disable() #COMPLEXITY1##OPTIONAL#
syntax572=#M#Use java.awt.Component.setEnabled(boolean) instead of javax.swing.JComponent.enable() #COMPLEXITY1##OPTIONAL# 
syntax573=#M#Use FocusTraversalPolicy instead of JComponent.getNextFocusableComponent() #COMPLEXITY2##OPTIONAL# 
syntax574=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax575=#M#Use Component.setFocusTraversalKeys(int, Set) and Container.setFocusCycleRoot(boolean) instead of JComponent.isManagingFocus() #COMPLEXITY2##OPTIONAL# 
syntax576=#M#Use FocusTraversalPolicy.getDefaultComponent(Container).requestFocus() instead of JComponent.requestDefaultFocus() #COMPLEXITY2##OPTIONAL# 
syntax577=#M#Use setBounds(int, int, int, int) instead of JComponent.reshape(int, int, int, int) #COMPLEXITY1##OPTIONAL# 
syntax578=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax579=getJMenuBar  #COMPLEXITY1##OPTIONAL# 
syntax580=setJMenuBar #COMPLEXITY1##OPTIONAL# 
syntax581=#M#Use JList.getSelectedValuesList() instead of JList.getSelectedValues() #COMPLEXITY1##OPTIONAL# 
syntax583=getPassword #COMPLEXITY1##OPTIONAL# 
syntax585=getJMenuBar  #COMPLEXITY1##OPTIONAL#  
syntax586=setJMenuBar #COMPLEXITY1##OPTIONAL# 
syntax587=#M#Use  new JScrollPane(JTable) instead of JTable.createScrollPaneForTable(JTable) #COMPLEXITY1##OPTIONAL# 
syntax588=#M#Use doLayout() instead of sizeColumnsToFit(boolean) #COMPLEXITY2##OPTIONAL# 
syntax589=#M#Use getScrollMode() instead of isBackingStoreEnabled() #COMPLEXITY2##OPTIONAL# 
syntax590=#M#Use setScrollMode() instead of setBackingStoreEnabled() #COMPLEXITY2##OPTIONAL# 
syntax591=#M#Use javax.swing.KeyStroke.getKeyStroke(char)  instead of javax.swing.KeyStroke.getKeyStroke(char, boolean)  #COMPLEXITY1##OPTIONAL# 
syntax592=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax593=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax594=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax595=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax596=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax597=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax598=#M#Use TextUI.modelToView2D(JTextComponent, int, Position.Bias) instead of BasicTextUI.modelToView(JTextComponent, int) #COMPLEXITY2##OPTIONAL# 
syntax599=#M#Use TextUI.viewToModel2D(JTextComponent, Point2D, Position.Bias[]) instead of BasicTextUI.viewToMode(JTextComponent, int) #COMPLEXITY2##OPTIONAL# 
syntax600=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax601=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax602=#M#Use BasicScrollPaneUI.uninstallListeners(JComponent) instead of MetalScrollPaneUI.uninstallListeners(JScrollPane)#COMPLEXITY2##OPTIONAL# 
syntax603=#M#Use TextUI.modelToView2D(JTextComponent, int, Position.Bias) instead of MultiTextUI.modelToView(JTextComponent, int) #COMPLEXITY2##OPTIONAL# 
syntax604=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax605=#M#Use TextUI.modelToView2D(JTextComponent, int, Position.Bias) instead of TextUI.getToolTipText(JTextComponent, Point) #COMPLEXITY2##OPTIONAL# 
syntax606=#M#Use TextUI.modelToView2D(JTextComponent, int, Position.Bias) instead of TextUI.modelToView(JTextComponent, int) #COMPLEXITY2##OPTIONAL# 
syntax607=#M#Use TextUI.viewToModel2D(JTextComponent, Point2D, Position.Bias[]) instead of TextUI.viewToModel(JTextComponent, Point) #COMPLEXITY3##OPTIONAL# 
syntax608=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax609=#M#Use JScrollPane.getViewportBorderBounds() instead of ScrollPaneLayout.getViewportBorderBounds(JScrollPane) #COMPLEXITY2##OPTIONAL# 
syntax610=#M#Use KeyboardFocusManager.getFocusOwner() instead of SwingUtilities.findFocusOwner(Component) #COMPLEXITY2##OPTIONAL# 
syntax611=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax612=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax613=#M#Use javax.swing.text.JTextComponent.modelToView2D(int) instead of javax.swing.text.JTextComponent.modelToView(int) #COMPLEXITY2##OPTIONAL# 
syntax614=#M#Use javax.swing.text.JTextComponent.viewToModel2D(Point2D) instead of javax.swing.text.JTextComponent.viewToModel(Point) #COMPLEXITY2##OPTIONAL# 
syntax615=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax616=#M#Use javax.swing.text.PasswordView.drawEchoCharacter(Graphics2D, float, float, char) instead of javax.swing.text.PasswordView.drawEchoCharacter(Graphics, int, int, char) #COMPLEXITY2##OPTIONAL# 
syntax617=#M#Use javax.swing.text.PasswordView.drawSelectedText(Graphics2D, float, float, int, int) instead of javax.swing.text.PasswordView.drawSelectedText(Graphics, int, int, int, int) #COMPLEXITY2##OPTIONAL# 
syntax618=#M#Use javax.swing.text.PasswordView.drawUnselectedText(Graphics2D, float, float, int, int) instead of javax.swing.text.PasswordView.drawUnselectedText(Graphics, int, int, int, int) #COMPLEXITY2##OPTIONAL# 
syntax619=#M#Use javax.swing.text.PlainView.drawLine(int, Graphics2D, float,float) instead of javax.swing.text.PlainView.drawLine(int, Graphics, int, int) #COMPLEXITY2##OPTIONAL# 
syntax620=#M#Use javax.swing.text.PlainView.drawSelectedText(Graphics2D, float, float, int, int) instead of javax.swing.text.PlainView.drawSelectedText(Graphics, int, int, int, int) #COMPLEXITY2##OPTIONAL# 
syntax621=#M#Use javax.swing.text.PlainView.drawUnselectedText(Graphics2D, float, float, int, int) instead of javax.swing.text.PlainView.drawUnselectedText(Graphics, int, int, int, int) #COMPLEXITY2##OPTIONAL# 
syntax622=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax623=#M#Use javax.swing.text.Utilities.drawTabbedText(Segment, float,float, Graphics2D, TabExpander, int) instead of javax.swing.text.Utilities.drawTabbedText(Segment, int, int, Graphics, TabExpander, int) #COMPLEXITY2##OPTIONAL# 
syntax624=#M#Use javax.swing.text.Utilities.getBreakLocation(Segment, FontMetrics, float,float, TabExpander, int) instead of javax.swing.text.Utilities.getBreakLocation(Segment, FontMetrics, int, int, TabExpander, int) #COMPLEXITY2##OPTIONAL# 
syntax625=#M#Use javax.swing.text.Utilities.getPositionAbove(JTextComponent, int, float) instead of javax.swing.text.Utilities.getPositionAbove(JTextComponent, int, int) #COMPLEXITY2##OPTIONAL# 
syntax626=#M#Use javax.swing.text.Utilities.getPositionBelow(JTextComponent, int, float) instead of javax.swing.text.Utilities.getPositionBelow(JTextComponent, int, int) #COMPLEXITY2##OPTIONAL# 
syntax627=#M#Use javax.swing.text.Utilities.getTabbedTextOffset(Segment, FontMetrics, float,float, TabExpander, int) instead of javax.swing.text.Utilities.getTabbedTextOffset(Segment, FontMetrics, int, int, TabExpander, int) #COMPLEXITY2##OPTIONAL# 
syntax628=#M#Use javax.swing.text.Utilities.getTabbedTextWidth(Segment, FontMetrics, float, TabExpander, int) instead of javax.swing.text.Utilities.getTabbedTextWidth(Segment, FontMetrics, int, TabExpander, int) #COMPLEXITY2##OPTIONAL# 
syntax629=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax630=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax631=#M#Use javax.swing.text.WrappedPlainView.drawLine(int, int, Graphics2D,float,float) instead of javax.swing.text.WrappedPlainView.drawLine(int, int, Graphics, int, int) #COMPLEXITY2##OPTIONAL# 
syntax632=#M#Use javax.swing.text.WrappedPlainView.drawSelectedText( Graphics2D,float,float, int, int) instead of javax.swing.text.WrappedPlainView.drawSelectedText(Graphics, int, int, int, int) #COMPLEXITY2##OPTIONAL# 
syntax633=#M#Use javax.swing.text.WrappedPlainView.drawUnselectedText( Graphics2D,float,float, int, int) instead of javax.swing.text.WrappedPlainView.drawUnselectedText(Graphics, int, int, int, int) #COMPLEXITY2##OPTIONAL# 
syntax634=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax635=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax636=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax637=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax638=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax639=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax640=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax641=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax642=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax643=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax644=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax645=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax646=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax647=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax648=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax649=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax650=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax651=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax652=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax653=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax654=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax665=##Use org.xml.sax.Attributes istead of org.xml.sax.AttributeList #COMPLEXITY2# \nhttp://www.saxproject.org/apidoc/org/xml/sax/Attributes.html\n #OPTIONAL# 
importsyntax667=##Use org.xml.sax.ContentHandler instead of org.xml.sax.DocumentHandler #COMPLEXITY2# \nhttp://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n #OPTIONAL# 
importsyntax670=##Use org.xml.sax.XMLReader instead of org.xml.sax.Parser #COMPLEXITY2# \nhttp://www.saxproject.org/apidoc/org/xml/sax/XMLReader.html\new #OPTIONAL# 
importsyntax673=Not Applicable
importsyntax674=Not Applicable
importsyntax675=Not Applicable
importsyntax676=Not Applicable
importsyntax677=Not Applicable
importsyntax678=Not Applicable
importsyntax679=Not Applicable
importsyntax680=Not Applicable
importsyntax681=##Use org.xml.sax.helpers.AttributesImpl instead of org.xml.sax.helpers.AttributeListImpl #COMPLEXITY2# \n http://www.saxproject.org/apidoc/org/xml/sax/Attributes.html #OPTIONAL# 
importsyntax682=##Use MBeanServer.getClassLoaderRepository() instead of javax.management.DefaultLoaderRepository #COMPLEXITY2# \nhttps://docs.oracle.com/javase/7/docs/api/javax/management/MBeanServer.html\n #OPTIONAL# 
importsyntax683=##Use MBeanServer.getClassLoaderRepository() instead of javax.management.loading.DefaultLoaderRepository #COMPLEXITY2# \nhttps://docs.oracle.com/javase/7/docs/api/javax/management/MBeanServer.html\n #OPTIONAL# 
importsyntax684=##Use org.xml.sax.helper.DefaultHandler instead of org.xml.sax.HandlerBase #COMPLEXITY2# \nhttp://tutorials.jenkov.com/java-xml/sax-defaulthandler.html\n #OPTIONAL# 
importsyntax687=Not Applicable
importsyntax688=Not Applicable
importsyntax689=Not Applicable
importsyntax690=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax691=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax692=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax696=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax697=import javax.xml.soap.SOAPFactory #COMPLEXITY2##OPTIONAL# 
importsyntax698=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax707=No Replacement #COMPLEXITY3##OPTIONAL# 
importsyntax708=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax720=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax772=No Replacement #COMPLEXITY3##MANDATORY# 
syntax773=No Replacement #COMPLEXITY3##MANDATORY# 
syntax782=Not Applicable
syntax783=Not Applicable
syntax784=Not Applicable
syntax785=Not Applicable
syntax786=Not Applicable
syntax787=Not Applicable
syntax788=Not Applicable
syntax789=Not Applicable
syntax790=#M#Use javax.xml.soap.SOAPFactory.createElement(Name) instead of javax.xml.soap.SOAPElementFactory.create(Name) #COMPLEXITY1##OPTIONAL# 
syntax798=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax799=No Replacement #COMPLEXITY3##MANDATORY# 
syntax800=No Replacement #COMPLEXITY3##MANDATORY# 
syntax801=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax808=No Replacement #COMPLEXITY3##MANDATORY# 
syntax817=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax822=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax826=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax828=Not Applicable
syntax830=Not Applicable
syntax837=#M#Use javax.swing.JPopupMenu.container.getComponent instead of javax.swing.JPopupMenu.getComponentAtIndex #COMPLEXITY1##OPTIONAL# 
syntax838=getComponent #COMPLEXITY1##OPTIONAL# 
syntax845=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax860=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax861=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax862=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax863=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax864=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax866=No Replacement #COMPLEXITY3##MANDATORY# 
syntax871=No Replacement #COMPLEXITY3##MANDATORY# 
syntax872=No Replacement #COMPLEXITY3##MANDATORY# 
syntax873=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax874=getMaxDescent #COMPLEXITY1##OPTIONAL# 
syntax890=No Replacement #COMPLEXITY3##MANDATORY# 
syntax891=No Replacement #COMPLEXITY3##MANDATORY# 
syntax892=No Replacement #COMPLEXITY3##MANDATORY# 
syntax893=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax914=No Replacement #COMPLEXITY3##MANDATORY# 
syntax915=No Replacement #COMPLEXITY3##MANDATORY# 
syntax916=Not Applicable
syntax917=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax924=Not Applicable
syntax934=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax943=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax961=Not Applicable
syntax965=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax966=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax967=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax968=Not Applicable
syntax969=Not Applicable
syntax970=No Replacement #COMPLEXITY3##MANDATORY# 
syntax971=Not Applicable
syntax972=No Replacement #COMPLEXITY3##MANDATORY# 
syntax946=No Replacement #COMPLEXITY3##MANDATORY# 
syntax974=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax975=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax976=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax977=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax978=No Replacement #COMPLEXITY3##OPTIONAL# 
syntax979=Not Applicable
syntax981=##Replacement for WebStart is GetDown third party library #COMPLEXITY1##MANDATORY#
importsyntax982=##javax.xml.bind package is removed from JDK11. Use javax.xml.bind jaxb-api 2.3.0, com.sun.xml.bind jaxb-core 2.3.0 and com.sun.xml.bind jaxb-impl 2.3.0 jars for using javax.xml.bind classes.Add requires java.xml.bind; in module-info.java to resolve the compilation in eclipse. #COMPLEXITY2##MANDATORY#
importsyntax983=##javax.xml.ws package is removed from JDK11. Use com.sun.xml.ws jaxws-rt 2.3.1 and javax.xml.ws jaxws-api 2.3.0 jars for using javax.xml.ws classes. #COMPLEXITY2##MANDATORY#
importsyntax984=##javax.xml.ws package is removed from JDK11. Use com.sun.xml.ws jaxws-rt 2.3.1 and javax.xml.ws jaxws-api 2.3.0 jars for using javax.xml.ws classes. #COMPLEXITY2##MANDATORY#
importsyntax985=No Replacement #COMPLEXITY4##MANDATORY#
importsyntax986=No Replacement #COMPLEXITY4##MANDATORY#
importsyntax987=##java.awt package is not enabled by default in JDK11. Add requires java.desktop; in the module-info.java to load java.awt package. #COMPLEXITY1##MANDATORY#
importsyntax988=##java.sql package is not enabled by default in JDK11. Add requires java.sql; in the module-info.java to load java.sql package. #COMPLEXITY1##MANDATORY#
importsyntax989=##javax.management package is not enabled by default in JDK11. Add requires java.management; in the module-info.java to load javax.management package. #COMPLEXITY1##MANDATORY#
importsyntax990=##javax.sql.rowset package is not enabled by default in JDK11. Add requires java.sql.rowset; in the module-info.java to load javax.sql.rowset package. #COMPLEXITY1##MANDATORY#
importsyntax991=##javax.activation package is not enabled by default in JDK11. Add com.sun.activation javax.activation-1.2.0.jar in module path and add requires java.activation; in the module-info.java to load javax.activation package. #COMPLEXITY1##MANDATORY#
importsyntax992=##java.rmi package is not enabled by default in JDK11. Add requires java.rmi; in the module-info.java to load java.rmi package. #COMPLEXITY1##MANDATORY#
importsyntax993=##javax.xml.soap package is removed from JDK11. Use com.sun.xml.ws jaxws-ri 2.3.0 jar for using javax.xml.soap classes. #COMPLEXITY2##MANDATORY#
importsyntax994=##Currently JavaFX is not supported in Open JDK.#COMPLEXITY3##MANDATORY#